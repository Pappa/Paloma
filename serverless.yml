service: paloma
app: paloma
# org: DungBeetleBASH

# Serverless version
# Check out our docs for more details
frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  region: eu-west-1
  profile: serverless-agent
  environment:
    USERS_TABLE: "paloma-users-${self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [UsersTable, Arn]

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  users-create:
    handler: bin/users/create
    events:
      - http:
          path: users
          method: post
          cors: true
          authorizer: aws_iam
  users-update:
    handler: bin/users/update
    events:
      - http:
          path: users
          method: put
          cors: true
          authorizer: aws_iam
  users-read:
    handler: bin/users/read
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
          authorizer: aws_iam
  users-delete:
    handler: bin/users/delete
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
          authorizer: aws_iam

resources:
  - ${file(serverless-resources/dynamodb.yml)}
  - ${file(serverless-resources/cognito.yml)}

plugins:
  - fullstack-serverless

custom:
  fullstack:
    #    domain: paloma.com
    #    certificate: arn:aws:acm:us-east-1:...     # The ARN for the SSL cert to use form AWS CertificateManager
    bucketName: paloma-frontend # Unique name for the S3 bucket to host the client assets
    distributionFolder: client/dist # Path to the client assets to be uploaded to S3
    indexDocument: index.html # The index document to use
    errorDocument: error.html # The error document to use
    singlePageApp: true # If true 403 errors will be rerouted (missing assets) to your root index document to support single page apps like React and Angular where the js framework handles routing
    compressWebContent: true # Use compression when serving web content
    apiPath: # The path prefix for your API Gateway lambdas. The path for the lambda http event trigger needs to start with this too eg. api/myMethod
    #    apiGatewayRestApiId: a12bc34df5            # If "Api Gateway Rest Api" is not part of the same serverless template, you can set your API id here
    #    clientCommand: gulp dist                   # Command to generate the client assets. Defaults to doing nothing
    clientSrcPath: client/src # The path to where you want to run the clientCommand
    #    waf: 00000000-0000-0000-0000-000000000000  # ID of the Web Application Firewall. Defaults to not used
    # logging:
    #   bucket: my-bucket.s3.amazonaws.com
    #   prefix: my-prefix
    # minimumProtocolVersion: TLSv1.2_2018
    # priceClass: PriceClass_100
    noConfirm: false # Alternative to --no-confirm flag. Use this parameter if you do not want a confirmation prompt to interrupt automated builds.
